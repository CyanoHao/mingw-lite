diff --git a/mingw-w64-crt/stdio/ftruncate64.c b/mingw-w64-crt/stdio/ftruncate64.c
index ec597e206..cf0880348 100644
--- a/mingw-w64-crt/stdio/ftruncate64.c
+++ b/mingw-w64-crt/stdio/ftruncate64.c
@@ -138,8 +138,26 @@ checkfreespace (const HANDLE f, const ULONGLONG requiredspace)
   BY_HANDLE_FILE_INFORMATION fileinfo;
   HANDLE vol;
 
+  static typeof (&GetFileSizeEx) pGetFileSizeEx = NULL;
+  static typeof (&FindFirstVolumeW) pFindFirstVolumeW = NULL;
+  static typeof (&FindNextVolumeW) pFindNextVolumeW = NULL;
+  static typeof (&FindVolumeClose) pFindVolumeClose = NULL;
+  static int dynamicfunctioninit = 0;
+
+  if (!dynamicfunctioninit) {
+    pGetFileSizeEx = (typeof (&GetFileSizeEx)) GetProcAddress(GetModuleHandleW(L"kernel32.dll"), "GetFileSizeEx");
+    pFindFirstVolumeW = (typeof (&FindFirstVolumeW)) GetProcAddress(GetModuleHandleW(L"kernel32.dll"), "FindFirstVolumeW");
+    pFindNextVolumeW = (typeof (&FindNextVolumeW)) GetProcAddress(GetModuleHandleW(L"kernel32.dll"), "FindNextVolumeW");
+    pFindVolumeClose = (typeof (&FindVolumeClose)) GetProcAddress(GetModuleHandleW(L"kernel32.dll"), "FindVolumeClose");
+    dynamicfunctioninit = 1;
+  }
+
+  /* Skip space checking (Windows 9x and NT 4) */
+  if (!pGetFileSizeEx || !pFindFirstVolumeW || !pFindNextVolumeW || !pFindVolumeClose)
+    return 0;
+
   /* Get current size */
-  check = GetFileSizeEx (f, &currentsize);
+  check = pGetFileSizeEx (f, &currentsize);
   if (!check)
   {
     _set_errno(EBADF);
@@ -205,7 +223,7 @@ checkfreespace (const HANDLE f, const ULONGLONG requiredspace)
 
   dirpath = NULL;
 
-  vol = FindFirstVolumeW(volumeid,50);
+  vol = pFindFirstVolumeW(volumeid,50);
   /* wprintf(L"%d - %ws\n",wcslen(volumeid),volumeid); */
   do {
     check = GetVolumeInformationW(volumeid,volumepath,MAX_PATH+1,&volumeserial,NULL,NULL,NULL,0);
@@ -214,8 +232,8 @@ checkfreespace (const HANDLE f, const ULONGLONG requiredspace)
       dirpath = volumeid; 
       break;
     }
-  } while (FindNextVolumeW(vol,volumeid,50));
-  FindVolumeClose(vol);
+  } while (pFindNextVolumeW(vol,volumeid,50));
+  pFindVolumeClose(vol);
 
   if(!dirpath) free(volumeid); /* we found the volume */
   free(volumepath);
